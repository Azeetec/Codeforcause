/*var chartConfig = {
    type: 'vbullet',
    title: {
        text: 'Pushups Per Day'
    },
    subtitle: {
        text: 'Bars are draggable'
    },
    plot: {
        valueBox: [
            {
                type: 'all',
                text: '[%node-value / %node-goal-value]',
                color: '#000',
                placement: 'goal'
            }
        ]
    },
    scaleX: {
        labels: ['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']
    },
    tooltip: {
        borderRadius: '3px',
        borderWidth: '0px',
        fontSize: '14px',
        shadow: true
    },
    series: [
        {
            values: [20, 40, 14, 50, 15, 35, 5],
            dataDragging: true,
            goal: {
                backgroundColor: '#64b5f6',
                borderWidth: '0px'
            },
            goals: [25, 43, 30, 40, 21, 59, 35],
            rules: [
                {
                    backgroundColor: '#81c784',
                    rule: '%v >= %g'
                },
                {
                    backgroundColor: '#ef5350',
                    rule: '%v < %g/2'
                },
                {
                    backgroundColor: '#ffca28',
                    rule: '%v >= %g/2 && %v < %g'
                }
            ]
        }
    ]
};
var chart = new ZingChart(document.querySelector("#myChart"), chartConfig);
chart.render();


/!*zingchart.loadModules('dragging'); // load dragging module
zingchart.render({
    id: 'myChart',
    data: chartConfig,
    modules: 'dragging', // need this to enable drag
    height: '100%',
    width: '100%',
});*!/*/

//////////////////////////////////// Bar Highcharts ////////////////////////
let chartConfig = {
    type: 'vbullet',
    title: {
        text: 'Orders per month'
    },
    subtitle: {
        text: 'Order accuracy graph'
    },
    plot: {
        valueBox: [
            {
                type: 'all',
                text: '[%node-value / %node-goal-value]',
                color: '#000',
                placement: 'goal'
            }
        ]
    },
    scaleX: {
        labels: ['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']
    },
    tooltip: {
        borderRadius: '3px',
        borderWidth: '0px',
        fontSize: '14px',
        shadow: true
    },
    series: [
        {
            values: [20, 40, 14, 50, 15, 35, 5],
            dataDragging: true,
            goal: {
                backgroundColor: '#64b5f6',
                borderWidth: '0px'
            },
            goals: [25, 43, 30, 40, 21, 59, 35],
            rules: [
                {
                    backgroundColor: '#81c784',
                    rule: '%v >= %g'
                },
                {
                    backgroundColor: '#ef5350',
                    rule: '%v < %g/2'
                },
                {
                    backgroundColor: '#ffca28',
                    rule: '%v >= %g/2 && %v < %g'
                }
            ]
        }
    ]
};

zingchart.loadModules('dragging'); // load dragging module
zingchart.render({
    id: 'myChart',
    data: chartConfig,
    modules: 'dragging', // need this to enable drag
    height: '100%',
    width: '100%',
});


///////////////////////////// Mixed Chart/////////////////////////

let chartConfig1 = {
    type: 'mixed',
    globals: {
        fontFamily: 'Arial'
    },
    backgroundColor: '#FFFFFF',
    width: '100%',
    title: {
        text: '73 Prepaid and 63 COD payment this month',
        align: 'left',
        backgroundColor: 'none',
        bold: false,
        fontColor: '#000000',
        fontSize: '20px',
        x: '40px',
        y: '5px'
    },
    subtitle: {
        text: '84% <i>Compared to Last Month</i>',
        align: 'left',
        backgroundColor: 'none',
        bold: false,
        fontColor: '#7E7E7E',
        fontSize: '14px',
        x: '55px',
        y: '35px'
    },
    legend: {
        backgroundColor: 'none',
        borderWidth: '0px',
        item: {
            fontColor: '#7E7E7E'
        },
        layout: 'float',
        marker: {
            type: 'circle'
        },
        shadow: false,
        toggleAction: 'remove',
        x: '32px',
        y: '80px'
    },
    plot: {
        barSpace: '20px'
    },
    plotarea: {
        margin: '125px 45px 30px 45px'
    },
    scaleX: {
        values: ['WEEK 1', 'WEEK 2', 'WEEK 3', 'WEEK 4'],
        guide: {
            visible: false
        },
        item: {
            color: '#8B8B8B'
        },
        lineColor: '#D9D7D5',
        lineWidth: '1px',
        tick: {
            visible: false
        }
    },
    scaleY: {
        values: '0:25:5',
        guide: {
            lineStyle: 'dotted'
        },
        item: {
            color: '#8B8B8B'
        },
        lineColor: '#D9D7D5',
        lineWidth: '1px',
        tick: {
            visible: false
        }
    },
    shapes: [
        {
            type: 'triangle',
            backgroundColor: '#5297B6',
            size: '5px',
            x: '50px',
            y: '50px'
        }
    ],
    series: [
        {
            type: 'bar',
            text: 'COD',
            values: [15, 10, 4, 13],
            backgroundColor: '#F29E4A',
            barWidth: '10px',
            hoverState: {
                visible: false
            }
        },
        {
            type: 'bar',
            text: 'PREPAID',
            values: [3, 2, 4, 5],
            backgroundColor: '#7BBADE',
            barWidth: '10px',
            hoverState: {
                visible: false
            }
        },
    ]
};
zingchart.render({
    id: 'myChart1',
    data: chartConfig1
});


///////////////////////////////////// Line Chart 1////////////////////////////////////////

let chartConfig2= {
    type: 'line',
    title: {text: 'Transportation and packaging cost'},
    // subtitle: {text: 'Click and drag label vertically.'},
    plot: {tooltip: {visible: false}, cursor: 'hand'},
    scaleX: {markers: [], offsetEnd: '75px', labels: ['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']},
    crosshairX: {},
    series: [{text: 'Apple Sales', values: [35, 42, 67, 89, 25, 34, 67]}, {
        text: 'Peach Sales',
        values: [15, 25, 34, 42, 67, 67, 89]
    }]
};
zingchart.render({id: 'myChart2', data: chartConfig2, height: '100%', width: '100%',});

/** define Marker class to construct* markers on the fly easier.*/function Marker(_index) {
    return {type: 'line', flat: false, lineColor: '#424242', lineWidth: '1px', range: [_index]}
}

/** define Label class to construct* labels on the fly easier.*/function Label(_text, _id, _offsetX, _offsetY) {
    return {
        id: _id,
        text: _text,
        angle: 0,
        padding: '5px 10px 5px 10px',
        backgroundColor: '#eeeeee',
        cursor: 'pointer',
        flat: false,
        fontSize: '13px',
        fontStyle: 'bold',
        offsetX: _offsetX,
        offsetY: _offsetY ? _offsetY : 0,
        textAlign: 'left',
        wrapText: true
    }
}

let formatLabelText = (_nodeindex, _scaleText) => {
    let plotInfo = null;
    let nodeInfo;
    let seriesText = '';
    let labelString = isNaN(_scaleText) ? _scaleText + '<br>' : '';
    let color = '';
    let plotLength = zingchart.exec('myChart', 'getplotlength', {graphid: 0});
    for (let i = 0; i < plotLength; i++) {
        plotInfo = zingchart.exec('myChart', 'getobjectinfo', {object: 'plot', plotindex: i});
        nodeInfo = zingchart.exec('myChart', 'getobjectinfo', {object: 'node', plotindex: i, nodeindex: _nodeindex});
        color = plotInfo.lineColor ? plotInfo.lineColor : plotInfo.backgroundColor1;
        seriesText = plotInfo.text ? plotInfo.text : ('Series ' + (i + 1));
        labelString += '<span style="color:' + color + '">' + seriesText + ':</span>' + ' ' + nodeInfo.value + '<br>';
    }
    return labelString;
};
let markersArray = [];
let labelsArray = [];
HashTable = {};
/** Register a graph click event and then render a chart with the markers*/zingchart.bind('myChart', 'click', (e) => {
    let xyInformation;
    let nodeIndex;
    let scaleText;
    if (e.target != 'node' && e.plotarea) {
        xyInformation = zingchart.exec('myChart', 'getxyinfo', {x: e.ev.clientX, y: e.ev.clientY});
        if (xyInformation && xyInformation[0] && xyInformation[2]) {
            nodeIndex = xyInformation[0].scalepos;
            scaleText = xyInformation[0].scaletext;
            if (!markerHashTable['nodeindex' + nodeIndex]) {
                let nodeInfo = zingchart.exec('myChart', 'getobjectinfo', {
                    object: 'node',
                    nodeindex: nodeIndex,
                    plotindex: 0
                });
                let labelText = formatLabelText(nodeIndex, scaleText);
                let labelId = 'label_' + nodeIndex;
                let newMarker = new Marker(nodeIndex);
                let newLabel = new Label(labelText, labelId, nodeInfo.x, nodeInfo.y);
                markerHashTable['nodeindex' + nodeIndex] = true;
                markersArray.push(newMarker);
                labelsArray.push(newLabel);
                chartConfig.scaleX.markers = markersArray;
                chartConfig.labels = labelsArray;
                zingchart.exec('myChart', 'setdata', {data: chartConfig});
            } else {
                console.log('---marker already exists----');
            }
        }
    }
});
/** Register a node_click event and then render a chart with the markers*/zingchart.bind('myChart', 'node_click', (e) => {
    if (!markerHashTable['nodeindex' + e.nodeindex]) {
        let labelText = formatLabelText(e.nodeindex, e.scaletext);
        let labelId = 'label_' + e.nodeindex;
        let newMarker = new Marker(e.nodeindex, labelText, e.plotindex);
        let newLabel = new Label(labelText, labelId, e.ev.layerX, e.ev.layerY);
        markerHashTable['nodeindex' + e.nodeindex] = true;
        markersArray.push(newMarker);
        labelsArray.push(newLabel);
        chartConfig.scaleX.markers = markersArray;
        chartConfig.labels = labelsArray;
        zingchart.exec('myChart', 'setdata', {data: chartConfig});
    } else {
        console.log('---marker already exists----');
    }
});
let labelMouseDown = false;
let labelId = null;
/** bind mousedown event for dragging label*/zingchart.bind('myChart', 'label_mousedown', (e) => {
    labelMouseDown = true;
    labelId = e.labelid;
    zingchart.exec('myChart', 'hideguide');
});
zingchart.bind('myChart', 'mousemove', (e) => {
    if (labelMouseDown && labelId) {
        zingchart.exec('myChart', 'updateobject', {type: 'label', data: {id: labelId, offsetY: e.ev.layerY}});
    }
});
zingchart.bind('myChart', 'mouseup', () => {
    labelMouseDown = false;
    labelId = null;
    zingchart.exec('myChart', 'showguide');
});
zingchart.bind('myChart', 'doubleclick', (e) => {
    console.log(e);
});


////////////////////////////////Line Chart 2 ////////////////////////////////

let chartConfig3 = {
    type: 'line',
    title: {
        text: 'Shipment graphs',
        adjustLayout: true
    },
    legend: {
        adjustLayout: true,
        align: 'center',
        verticalAlign: 'bottom'
    },
    plot: {
        valueBox: {
            text: '%v'
        }
    },
    plotarea: {
        margin: 'dynamic 50 dynamic dynamic'
    },
    scaleX: {
        transform: {
            type: 'date',
            all: '%mm/%d/%y<br>%h:%i:%s'
        }
    },
    scaleY: {
        guide: {
            lineStyle: 'solid'
        },
        label: {
            text: 'Number of Occurrences'
        },
        markers: [
            {
                type: 'line',
                label: {
                    text: 'Maximum Acceptable Range',
                    placement: 'right'
                },
                lineColor: '#c62828',
                lineStyle: 'dashed',
                range: [23]
            }
        ]
    },
    crosshairX: {
        exact: true,
        lineColor: '#000',
        marker: {
            backgroundColor: 'white',
            borderColor: '#000',
            borderWidth: '2px',
            size: '5px'
        },
        scaleLabel: {
            borderRadius: '2px'
        }
    },
    tooltip: {
        text: '%v<br>%kl',
        borderRadius: '2px'
    },
    series: [
        {
            values: [[1646333207000, 15], [1646592407000, 20], [1646765207000, 18], [1647283607000, 15], [1647542807000, 21], [1647802007000, 18], [1648061207000, 12], [1648234007000, 18], [1648579607000, 10], [1648838807000, 12]],
            lineColor: '#9c27b0',
            marker: {
                backgroundColor: '#9c27b0'
            }
        },
        {
            values: [[1646333207000, 10], [1646592407000, 25], [1646765207000, 16], [1647283607000, 15], [1647542807000, 19], [1647802007000, 25], [1648061207000, 12], [1648234007000, 14], [1648579607000, 26], [1648838807000, 18]],
            lineColor: '#f57c00',
            marker: {
                backgroundColor: '#f57c00'
            }
        }
    ]
};

// RENDER CHARTS
// -----------------------------
zingchart.render({
    id: 'myChart3',
    data: chartConfig3
});


/////////////////////////////////Area Chart///////////////////////////

let chartConfig4 = {
    type: 'area',
    stacked: true,
    title: {
        text: 'Analytics of business growth and sale',
        fontColor: '#4caee7'
    },
  /*  subtitle: {
        // text: 'Referral Web Traffic ',
        fontColor: '#cb8670'
    },*/
    plot: {
        activeArea: true,
        animation: {
            delay: 50,
            effect: 'ANIMATION_SLIDE_LEFT',
            method: 'ANIMATION_REGULAR_EASE_OUT',
            sequence: 'ANIMATION_NO_SEQUENCE',
            speed: 1500
        },
        hoverMarker: {
            size: '8px'
        }
    },
    plotarea: {
        backgroundColor: '#fff'
    },
    scaleX: {
        lineColor: '#333',
        maxItems: 6,
        minValue: 1274313600000,
        step: 600000,
        tick: {
            lineColor: '#333'
        },
        transform: {
            type: 'date',
            all: '%D, %d %M<br>%h:%i %A',
            item: {
                visible: false
            }
        }
    },
    scaleY: {
        item: {
            padding: '4px'
        },
        lineColor: '#333',
        tick: {
            lineColor: '#333'
        }
    },
    series: [
        {
            values: [11, 36, 7, 44, 11, 28, 42, 26, 13, 32, 12, 24, 16, 11, 43, 39],
            backgroundColor: '#cb8670',
            lineColor: '#cb8670',
            marker: {
                backgroundColor: '#cb8670',
                borderColor: '#fff',
                borderWidth: '2px'
            }
        },
        {
            values: [21, 29, 14, 16, 28, 35, 21, 18, 11, 7, 4, 9, 25, 15, 33, 13],
            backgroundColor: '#4caee7',
            lineColor: '#4caee7',
            marker: {
                backgroundColor: '#4caee7',
                borderColor: '#fff',
                borderWidth: '2px'
            }
        }
    ]
};

zingchart.render({
    id: 'myChart4',
    data: chartConfig4,
    height: '100%',
    width: '100%'
});


////////////////////////////////Pie Chart///////////////////////////

let chartConfig5 = {
    type: 'pie',
    backgroundColor: '#fff',
    title: {
        text: 'Income, profit & expense',
        align: 'center',
        fontColor: '#black',
        fontFamily: 'Open Sans',
        fontSize: '25px',
        offsetX: '10px',
    },
/*    subtitle: {
        text: 'June 2020',
        align: 'left',
        fontColor: '#8e99a9',
        fontFamily: 'Open Sans',
        fontSize: '16px',
        offsetX: '10px',
        offsetY: '10px'
    },*/
    plot: {
        tooltip: {
            text: '%npv%',
            padding: '5 10',
            fontFamily: 'Open Sans',
            fontSize: '18px'
        },
        valueBox: {
            text: '%t\n%npv%',
            fontFamily: 'Open Sans',
            placement: 'out'
        },
        animation: {
            effect: 'ANIMATION_EXPAND_VERTICAL',
            method: 'ANIMATION_REGULAR_EASE_OUT',
            sequence: 'ANIMATION_BY_PLOT',
            speed: 500
        },
        borderColor: '#2B313B',
        borderWidth: '5px'
    },
    plotarea: {
        margin: '20 0 0 0'
    },
    source: {
        text: 'Source: gs.statcounter.com',
        fontColor: '#8e99a9',
        fontFamily: 'Open Sans',
        textAlign: 'left'
    },
    series: [
        {
            text: 'IE and Edge',
            values: [4.8],
            backgroundColor: '#50ADF5'
        },
        {
            text: 'Chrome',
            values: [63.69],
            backgroundColor: '#FF7965'
        },
        {
            text: 'Firefox',
            values: [4.64],
            backgroundColor: '#FFCB45'
        },
        {
            text: 'Safari',
            values: [15.15],
            backgroundColor: '#6877e5'
        },
        {
            text: 'Other',
            values: [11.72],
            backgroundColor: '#6FB07F'
        }
    ]
};

// RENDER CHARTS
// -----------------------------
zingchart.render({
    id: 'myChart5',
    data: chartConfig5,
    height: '100%',
    width: '100%',
});


////////////////////////// Chart 7/////////////////////////////////

let chartConfig6 = {
    type: 'nestedpie',
    backgroundColor: '#fff',
    legend: {
        marginTop: 'top',
        // marginRight: '15%',
        backgroundColor: 'none',
        borderColor: 'none',
        item: {
            padding: '10px',
            color: '#333'
        },
        marker: {
            type: 'circle',
            borderColor: 'none'
        }
    },
    plot: {
        valueBox: {
            visible: false
        },
        bandSpace: 0,
        borderWidth: '1px',
        hoverState: {
            visible: false
        },
        offset: '10px',
        rules: [
            {
                borderColor: '#7A73C6',
                rule: '%p == 0'
            },
            {
                borderColor: '#5DC5A1',
                rule: '%p == 1'
            },
            {
                borderColor: '#E18C78',
                rule: '%p == 2'
            },
            {
                borderColor: '#d3d3d3',
                rule: '%p == 3'
            },
            {
                borderColor: '#C77196',
                rule: '%p == 4'
            },
            {
                backgroundColor: '#5850AC',
                borderColor: '#5850AC',
                rule: '(%p == 0 && %i == 4)'
            },
            {
                backgroundColor: '#3BAA83',
                borderColor: '#3BAA83',
                rule: '(%p == 1 && %i == 4)'
            },
            {
                backgroundColor: '#B75A44',
                borderColor: '#B75A44',
                rule: '(%p == 2 && %i == 4)'
            },
            {
                backgroundColor: '#aaa9a9',
                borderColor: '#aaa9a9',
                rule: '(%p == 3 && %i == 4)'
            },
            {
                backgroundColor: '#A4436D',
                borderColor: '#A4436D',
                rule: '(%p == 4 && %i == 4)'
            }
        ],
        shadow: false
    },
    plotarea: {
        marginRight: '20%'
    },
    series: [
        {
            values: [null, null, null, null, 35, 35, 35, 35, 35, 35, 35, 35],
            backgroundColor: '#7A73C6'
        },
        {
            values: [null, null, null, null, 42, 42, 42, 42, 42, 42, 42, 42],
            backgroundColor: '#5DC5A1'
        },
        {
            values: [null, null, null, null, 67, 67, 67, 67, 67, 67, 67, 67],
            backgroundColor: '#E18C78'
        },
        {
            values: [null, null, null, null, 89, 89, 89, 89, 89, 89, 89, 89],
            backgroundColor: '#d3d3d3'
        },
        {
            values: [null, null, null, null, 5, 5, 5, 5, 5, 5, 5, 5],
            backgroundColor: '#C77196'
        }
    ]
};

// RENDER CHARTS
// -----------------------------
zingchart.render({
    id: 'myChart6',
    data: chartConfig6
});
